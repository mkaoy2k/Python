"""
Snake python game generated by OpenAssistant/oasst-sft-4-pythia-12b-epoch-3.5
2024-08-06 Status: Not working
"""
import pygame 
import time 
import random
 
#setting up display
pygame.init()
display = pygame.display.set_mode((400, 300))
clock = pygame.time.Clock()

#defining colors
white = (255, 255, 255)
black = (0, 0, 0)

#defining the snake
snake_body = []
snake_head = []
snake_length = 10
snake_speed = 5
snake_color = black

#adding snake body
for i in range(snake_length):
    snake_body.append([random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)])

#adding snake head
snake_head.append([random.randint(0, 255), random.randint(0, 255), random.randint(0, 255)])

#game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            x, y = event.pos
            if snake_body[x][y] == snake_head[x][y]:
                snake_body[x][y] = snake_body[x][y] + 1
                if snake_body[x][y] == snake_length - 1:
                    snake_head[x][y] = snake_head[x][y] - 1
                    if snake_body[x][y] == 0:
                        snake_head[x][y] = snake_length - 1
                        snake_body.pop(x, y)
                        snake_color = white
                        running = False
    
    #changing background color
    display.fill(black)
    
    #drawing snake
    for i in range(snake_length):
        if snake_body[i][0] >= snake_head[i][0] and snake_body[i][1] >= snake_head[i][1]:
            pygame.draw.line(display, snake_color, (snake_body[i][0] - snake_head[i][0], snake_body[i][1] - snake_head[i][1]), (snake_head[i][0], snake_head[i][1]))
    
    #updating game state
    display.fill(white)
    pygame.draw.rect(display, snake_color, (0, 0, display.get_width(), display.get_height() - 20))
    pygame.draw.rect(display, white, (display.get_width() - snake_length * snake_speed, 20, snake_length * snake_speed, display.get_height() - 20))
    
    #updating snake position
    for i in range(snake_length):
        snake_body[i][0] += snake_speed
        snake_body[i][1] += snake_speed
        
    #drawing snake head
    for i in range(snake_length):
        pygame.draw.line(display, snake_color, (snake_head[i][0], snake_head[i][1]), (snake_body[i][0], snake_body[i][1]))
    
    #drawing snake tail
    for i in range(snake_length):
        pygame.draw.line(display, snake_color, (snake_body[i][0], snake_body[i][1] + 10), (snake_head[i][0] - 10, snake_head[i][1] + 10))
    
    #checking for collisions
    for i in range(snake_length):
        for j in range(snake_length):
            if snake_body[i][0] == snake_body[j][0] and snake_body[i][1] == snake_body[j][1]:
                snake_body[i][0] = snake_body[j][0]
                snake_body[i][1] = snake_body[j][1]
                running = False
        
    #updating game state
    clock.tick(60)

#closing display
pygame.quit()

#printing game state
print("Game Over")